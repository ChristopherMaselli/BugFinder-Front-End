state = {
    posts: [
      {
        id: 1,
        status: "TODO",
        desc: "Engage Jupiter Express for outer solar system travel",
        name: "SPACE TRAVEL PARTERNERS",
        color: "Yellow",
        state: 1,
        upArrow: 2,
        number: 5,
        letters: "TIS-25",
        owner: "Chris"
      },
      {
        id: 2,
        status: "IN PROGRESS",
        desc: "Create 90 day plans for all departments in the Mars Office",
        name: "LOCAL MARS OFFICE",
        color: "Orange",
        state: 2,
        upArrow: 0,
        number: 9,
        letters: "TIS-12",
        owner: "NA"
      },
      {
        id: 3,
        status: "CODE REVIEW",
        desc: "Engage Saturn's Rings Resort as a preferred provider",
        name: "SPACE TRAVEL PARTERNERS",
        color: "Yellow",
        state: 2,
        upArrow: 2,
        number: 3,
        letters: "TIS-17",
        owner: "Sam"
      },
      {
        id: 4,
        status: "DONE",
        desc: "Requesting available flights is now taking > 5 seconds",
        name: "SEESPACEEZ PLUS",
        color: "Blue",
        state: 3,
        upArrow: 2,
        number: 3,
        letters: "TIS-8",
        owner: "John"
      }
    ],
    toDoPosts: [],
    inProgressPosts: [],
    codeReviewPosts: [],
    done: []
  };



  <Modal size="lg" aria-labelledby="contained-modal-title-vcenter" centered>
      <Modal.Header closeButton>
        <Modal.Title id="contained-modal-title-vcenter">New Post</Modal.Title>
      </Modal.Header>
      <Modal.Body>
        <div className="container">To add Form Fields for Helpdesk</div>
      </Modal.Body>
      <Modal.Footer>
        <Button variant="danger" onClick={props.onPopupChange}>
          Close
        </Button>
      </Modal.Footer>
    </Modal>

              <form>
            <div class="form-group">
              <label htmlFor="exampleFormControlInput1">Email address</label>
              <input
                type="email"
                class="form-control"
                id="exampleFormControlInput1"
                placeholder="name@example.com"
              ></input>
            </div>
            <div class="form-group">
              <label htmlFor="exampleFormControlSelect1">Example select</label>
              <select class="form-control" id="exampleFormControlSelect1">
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
              </select>
            </div>
            <div class="form-group">
              <label htmlFor="exampleFormControlSelect2">
                Example multiple select
              </label>
              <select
                multiple
                class="form-control"
                id="exampleFormControlSelect2"
              >
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
              </select>
            </div>
            <div class="form-group">
              <label htmlFor="exampleFormControlTextarea1">
                Example textarea
              </label>
              <textarea
                class="form-control"
                id="exampleFormControlTextarea1"
                rows="3"
              ></textarea>
            </div>
          </form>

                  /*
        {this.state.showPopup ? (
          <Popup
            show={this.state.}
            data-target="#exampleModalCenter"
            onPopupChange={this.handlePopup}
          />
        ) : null}
        */

          const [formInfo, setFormInfo] = useState({
    postName: "",
    postDesc: "",
    postStatus: "To Do",
    postColor: "Red",
    postState: 1,
    postUpArrow: 1,
    postNumber: 1,
    postLetters: "",
    postOwner: ""
  });

  {this.state.todoPosts.map(todoPost => (
                      <Post
                        key={todoPost.id}
                        id={todoPost.id}
                        desc={todoPost.desc}
                        name={todoPost.name}
                        status={todoPost.status}
                        color={todoPost.color}
                        state={todoPost.state}
                        upArrow={todoPost.upArrow}
                        number={todoPost.number}
                        letters={todoPost.letters}
                        owner={todoPost.owner}
                        onPopupChange={d => this.handlePopup(d)}
                      />
                    ))}

                                        width="292px"
                    max-height="164px"


                          <Form.Group controlId="Color">
        <Form.Label>Color</Form.Label>
        <Form.Control
          as="select"
          ref={postColorRef}
          value={formInfo.postColor}
          onChange={postColorRef => handleChange(postColorRef)}
          name="postColor"
        >
          <option>Red</option>
          <option>Orange</option>
          <option>Yellow</option>
          <option>Green</option>
          <option>Blue</option>
          <option>Purple</option>
        </Form.Control>
      </Form.Group>


      
      <Form.row>
        <Form.Group controlId="Hover BackgroundColor">
          <Form.Label>Hover Background Color</Form.Label>

          <SketchPicker
            color={formInfo.postHpverBackgroundColorValue}
            onChangeComplete={color => handleChangeHoverBackgroundColor(color)}
          />
        </Form.Group>

        <Form.Group controlId="Hover MiddleColor">
          <Form.Label>Hover Middle Color</Form.Label>
          <SketchPicker
            color={formInfo.postHoverMiddleColorValue}
            onChangeComplete={color => handleChangeHoverMidColor(color)}
          />
        </Form.Group>

        <Form.Group controlId="Hover TextColor">
          <Form.Label>Hover Text Color</Form.Label>
          <SketchPicker
            color={formInfo.postHoverTextColorValue}
            onChangeComplete={color => handleChangeHoverTextColor(color)}
          />
        </Form.Group>
      </Form.row>